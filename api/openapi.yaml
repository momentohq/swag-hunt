openapi: 3.0.0
info:
  title: Swag Hunt API
  description: |
    Used to manage swag
  version: 1.0.0

x-amazon-apigateway-request-validators:
  Validate All:
    validateRequestParameters: true
    validateRequestBody: true
x-amazon-apigateway-gateway-responses:
  BAD_REQUEST_BODY:
    statusCode: 400
    responseTemplates:
      application/json: '{ "message": "$context.error.validationErrorString" }'
    responseParameters:
      gatewayresponse.header.Access-Control-Allow-Origin: "'*'"

paths:
  /swag:
    post:
      summary: Add a new piece of swag
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewSwag'
      responses:
        201:
          $ref: '#/components/responses/Created'
        400:
          $ref: '#/components/responses/BadRequest'
        409:
          $ref: '#/components/responses/Conflict'
        500:
          $ref: '#/components/responses/UnknownError'
      x-amazon-apigateway-request-validator: Validate All
      x-amazon-apigateway-integration:
        uri:
          Fn::Sub: arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${AddSwagFunction.Arn}/invocations
        httpMethod: POST
        type: aws_proxy

components:
  schemas:
    NewSwag:
      description: New piece of swag
      type: object
      required:
        - from
        - type
        - referenceNumber
      properties:
        from:
          type: string
        location:
          type: string
        type:
          type: string
          enum: [shirt, hoodie, socks, sticker, hat, pin, toy, pen, cup, stuffed animal, coozie, power bank, sunglasses, notebook, tote, phone accessory, other]
        tags:
          type: array
          items:
            type: string
        referenceNumber:
          type: string

  responses:
    Created:
      description: Successfully added into the system
      content:
        application/json:
          schema:
            type: object
            required:
              - message
            properties:
              message:
                type: string
                description: Message resulting from a creation
    BadRequest:
      description: Unable to process request. Likely due to improperly formatted request.
      content:
        application/json:
          schema:
            type: object
            required:
              - message
            properties:
              message:
                type: string
                description: Message detailing what went wrong
    Conflict:
      description: Could not process due to resource state
      content:
        application/json:
          schema:
            type: object
            required:
              - message
            properties:
              message:
                type: string
                description: The image has not been through moderation
    UnknownError:
      description: An unexpected error occurred on the server.
      content:
        application/json:
          schema:
            type: object
            required:
              - message
            properties:
              message:
                type: string
                description: Unknown error message
                example: An unexpected error occurred.
